// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${relativeFile}: the current opened file relative to workspaceRoot
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    // Start PowerShell
    "windows": {
        "command": "${env:windir}\\sysnative\\windowspowershell\\v1.0\\PowerShell.exe",
        "args": [
            "-NoProfile",
            "-ExecutionPolicy",
            "Bypass"
        ]
    },
    "linux": {
        "command": "/usr/bin/powershell",
        "args": [
            "-NoProfile"
        ]
    },
    "osx": {
        "command": "/usr/local/bin/powershell",
        "args": [
            "-NoProfile"
        ]
    },
    // Show the output window always
    "showOutput": "always",
    // Associate with test task runner
    "tasks": [{
            "taskName": "SetUp",
            "suppressTaskName": true,
            "args": [
                "Write-Host 'Invoking psake to set up the environment for you.'; Invoke-psake build\\build.psake.ps1 -taskList Setup;",
                "Invoke-Command { Write-Host 'Completed SetUp task in task runner.' }"
            ]
        },
        {
            "taskName": "Clean",
            "suppressTaskName": true,
            "args": [
                "Write-Host 'Invoking psake on build.psake.ps1 -taskList Clean'; Invoke-psake build\\build.psake.ps1 -taskList Clean;",
                "Invoke-Command { Write-Host 'Completed Clean task in task runner.' }"
            ]
        },
        {
            "taskName": "Build",
            "suppressTaskName": true,
            "isBuildCommand": true,
            "args": [
                "Write-Host 'Invoking psake on build.psake.ps1 -taskList Build'; Invoke-psake build\\build.psake.ps1 -taskList Build;",
                "Invoke-Command { Write-Host 'Completed Build task in task runner.' }"
            ]
        },
        {
            "taskName": "BuildHelp",
            "suppressTaskName": true,
            "args": [
                "Write-Host 'Invoking psake on build.psake.ps1 -taskList BuildHelp'; Invoke-psake build\\build.psake.ps1 -taskList BuildHelp;",
                "Invoke-Command { Write-Host 'Completed BuildHelp task in task runner.' }"
            ]
        },
        {
            "taskName": "Analyze",
            "suppressTaskName": true,
            "args": [
                "Write-Host 'Invoking psake on build.psake.ps1 -taskList Analyze'; Invoke-psake build\\build.psake.ps1 -taskList Analyze;",
                "Invoke-Command { Write-Host 'Completed Analyze task in task runner.' }"
            ]
        },
        {
            "taskName": "Install",
            "suppressTaskName": true,
            "args": [
                "Write-Host 'Invoking psake on build.psake.ps1 -taskList Install'; Invoke-psake build\\build.psake.ps1 -taskList Install;",
                "Invoke-Command { Write-Host 'Completed Install task in task runner.' }"
            ]
        },
        {
            "taskName": "Publish",
            "suppressTaskName": true,
            "args": [
                "Write-Host 'Invoking psake on build.psake.ps1 -taskList Publish'; Invoke-psake build\\build.psake.ps1 -taskList Publish;",
                "Invoke-Command { Write-Host 'Completed Publish task in task runner.' }"
            ]
        },
        {
            "taskName": "Test",
            "suppressTaskName": true,
            "isTestCommand": true,
            "args": [
                "Write-Host 'Invoking Pester'; Invoke-Pester -PesterOption @{IncludeVSCodeMarker=$true};",
                "Invoke-Command { Write-Host 'Completed Test task in task runner.' }"
            ],
            "problemMatcher": "$pester"
        }
    ]
}
